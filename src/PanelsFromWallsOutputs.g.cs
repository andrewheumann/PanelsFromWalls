// This code was generated by Hypar.
// Edits to this code will be overwritten the next time you run 'hypar init'.
// DO NOT EDIT THIS FILE.

using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Hypar.Functions;
using Hypar.Functions.Execution;
using Hypar.Functions.Execution.AWS;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.Collections.Generic;

namespace PanelsFromWalls
{
    public class PanelsFromWallsOutputs: ResultsBase
    {
		/// <summary>
		/// The total number of panels.
		/// </summary>
		[JsonProperty("Panel Count")]
		public double PanelCount {get;}

		/// <summary>
		/// The number of panels that are neither the corner nor the designated panel length.
		/// </summary>
		[JsonProperty("Non-Standard Panel Count")]
		public double NonStandardPanelCount {get;}

		/// <summary>
		/// The number of unique panel lengths generated.
		/// </summary>
		[JsonProperty("Unique Lengths Count")]
		public double UniqueLengthsCount {get;}


        
        /// <summary>
        /// Construct a PanelsFromWallsOutputs with default inputs.
        /// This should be used for testing only.
        /// </summary>
        public PanelsFromWallsOutputs() : base()
        {

        }


        /// <summary>
        /// Construct a PanelsFromWallsOutputs specifying all inputs.
        /// </summary>
        /// <returns></returns>
        [JsonConstructor]
        public PanelsFromWallsOutputs(double panelcount, double nonstandardpanelcount, double uniquelengthscount): base()
        {
			this.PanelCount = panelcount;
			this.NonStandardPanelCount = nonstandardpanelcount;
			this.UniqueLengthsCount = uniquelengthscount;

		}

		public override string ToString()
		{
			var json = JsonConvert.SerializeObject(this);
			return json;
		}
	}
}